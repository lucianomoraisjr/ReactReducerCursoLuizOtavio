{"ast":null,"code":"import _objectWithoutProperties from \"/home/ljr/Project/Projetos de Curso/consumirapi/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/ljr/Project/Projetos de Curso/consumirapi/src/routes/MyRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nexport default function MyRoute(_ref) {\n  let Component = _ref.component,\n      isClosed = _ref.isClosed,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isClosed\"]);\n\n  const isLoggedIn = false;\n\n  if (isClosed && !isLoggedIn) {\n    return React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          prevPath: rest.location.pathname\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  } // eslint-disable-next-line react/jsx-props-no-spreading\n\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    component: Component,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n}\nMyRoute.defaultProps = {\n  isClosed: false\n};\nMyRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\n  isClosed: PropTypes.bool\n};","map":{"version":3,"sources":["/home/ljr/Project/Projetos de Curso/consumirapi/src/routes/MyRoute.js"],"names":["React","Route","Redirect","PropTypes","MyRoute","Component","component","isClosed","rest","isLoggedIn","pathname","state","prevPath","location","defaultProps","propTypes","oneOfType","element","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,OAAT,OAA8D;AAAA,MAAhCC,SAAgC,QAA3CC,SAA2C;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAARC,IAAQ;;AAC3E,QAAMC,UAAU,GAAG,KAAnB;;AAEA,MAAIF,QAAQ,IAAI,CAACE,UAAjB,EAA6B;AAC3B,WACE,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAEJ,IAAI,CAACK,QAAL,CAAcH;AAA1B;AAA7B,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD,GAT0E,CAW3E;;;AACA,SAAO,oBAAC,KAAD,oBAAWF,IAAX;AAAiB,IAAA,SAAS,EAAEH,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;AAEDD,OAAO,CAACU,YAAR,GAAuB;AACrBP,EAAAA,QAAQ,EAAE;AADW,CAAvB;AAIAH,OAAO,CAACW,SAAR,GAAoB;AAClBT,EAAAA,SAAS,EAAEH,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACc,OAAX,EAAoBd,SAAS,CAACe,IAA9B,CAApB,EACRC,UAFe;AAGlBZ,EAAAA,QAAQ,EAAEJ,SAAS,CAACiB;AAHF,CAApB","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MyRoute({ component: Component, isClosed, ...rest }) {\n  const isLoggedIn = false;\n\n  if (isClosed && !isLoggedIn) {\n    return (\n      <Redirect\n        to={{ pathname: '/login', state: { prevPath: rest.location.pathname } }}\n      />\n    );\n  }\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Route {...rest} component={Component} />;\n}\n\nMyRoute.defaultProps = {\n  isClosed: false,\n};\n\nMyRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n  isClosed: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}